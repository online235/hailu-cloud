<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hailu.cloud.api.xinan.module.app.dao.GovernmentUsersMapper" >
  <resultMap id="BaseResultMap" type="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_account" property="loginAccount" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="donation_times" property="donationTimes" jdbcType="INTEGER" />
    <result column="cratedat" property="cratedat" jdbcType="TIMESTAMP" />
    <result column="updatedat" property="updatedat" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" extends="BaseResultMap" >
    <result column="commonweal_article" property="commonwealArticle" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_account, login_password, city_code, donation_times, cratedat, updatedat
  </sql>
  <sql id="Blob_Column_List" >
    commonweal_article
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xa_government_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from xa_government_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" useGeneratedKeys="true" keyProperty="id" >
    insert into xa_government_users (login_account, login_password, city_code, 
      donation_times, cratedat, updatedat, 
      commonweal_article)
    values (#{loginAccount,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, 
      #{donationTimes,jdbcType=INTEGER}, #{cratedat,jdbcType=TIMESTAMP}, #{updatedat,jdbcType=TIMESTAMP}, 
      #{commonwealArticle,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" useGeneratedKeys="true" keyProperty="id" >
    insert into xa_government_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginAccount != null" >
        login_account,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="donationTimes != null" >
        donation_times,
      </if>
      <if test="cratedat != null" >
        cratedat,
      </if>
      <if test="updatedat != null" >
        updatedat,
      </if>
      <if test="commonwealArticle != null" >
        commonweal_article,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginAccount != null" >
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="donationTimes != null" >
        #{donationTimes,jdbcType=INTEGER},
      </if>
      <if test="cratedat != null" >
        #{cratedat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null" >
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="commonwealArticle != null" >
        #{commonwealArticle,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" >
    update xa_government_users
    <set >
      <if test="loginAccount != null" >
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="donationTimes != null" >
        donation_times = #{donationTimes,jdbcType=INTEGER},
      </if>
      <if test="cratedat != null" >
        cratedat = #{cratedat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null" >
        updatedat = #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="commonwealArticle != null" >
        commonweal_article = #{commonwealArticle,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" >
    update xa_government_users
    set login_account = #{loginAccount,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      donation_times = #{donationTimes,jdbcType=INTEGER},
      cratedat = #{cratedat,jdbcType=TIMESTAMP},
      updatedat = #{updatedat,jdbcType=TIMESTAMP},
      commonweal_article = #{commonwealArticle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" >
    update xa_government_users
    set login_account = #{loginAccount,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      donation_times = #{donationTimes,jdbcType=INTEGER},
      cratedat = #{cratedat,jdbcType=TIMESTAMP},
      updatedat = #{updatedat,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findGovernmentUsersByCityCode" resultType="com.hailu.cloud.api.xinan.module.app.entity.GovernmentUsers" parameterType="java.lang.String">
    select
    city_code,commonweal_article
    from xa_government_users
    where city_code = #{cityCode}
  </select>
</mapper>