<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hailu.cloud.api.xinan.module.app.dao.NationMapper">
    <resultMap id="BaseResultMap" type="com.hailu.cloud.api.xinan.module.app.entity.Nation">
        <id column="ID" property="id" jdbcType="BIGINT"/>
        <result column="CODE" property="code" jdbcType="VARCHAR"/>
        <result column="PARENT_CODE" property="parentCode" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="LAT" property="lat" jdbcType="VARCHAR"/>
        <result column="LNG" property="lng" jdbcType="VARCHAR"/>
        <result column="AREA_NAME" property="areaName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
         ID, CODE, PARENT_CODE, AREA_NAME, LNG, LAT, CREATE_TIME
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_nation
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_nation
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.hailu.cloud.api.xinan.module.app.entity.Nation" useGeneratedKeys="true"
            keyProperty="id">
    insert into sys_nation ( CODE, PARENT_CODE, AREA_NAME, LNG, LAT, CREATE_TIME )
    values (#{code}, #{parentCode}, #{areaName}, #{lat}, #{lng}, #{createTime})
  </insert>
    <insert id="insertSelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.Nation"
            useGeneratedKeys="true" keyProperty="id">
        insert into sys_nation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                CODE,
            </if>
            <if test="parentCode != null">
                PARENT_CODE,
            </if>
            <if test="areaName != null">
                AREA_NAME,
            </if>
            <if test="lat != null">
                lat,
            </if>
            <if test="lng != null">
                lng,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code},
            </if>
            <if test="parentCode != null">
                #{parentCode},
            </if>
            <if test="areaName != null">
                #{areaName},
            </if>
            <if test="lat != null">
                #{lat},
            </if>
            <if test="lng != null">
                #{lng},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.Nation">
        update sys_nation
        <set>
            <if test="code != null">
                CODE=#{code},
            </if>
            <if test="parentCode != null">
                PARENT_CODE=#{parentCode},
            </if>
            <if test="areaName != null">
                AREA_NAME=#{areaName},
            </if>
            <if test="lat != null">
                lat=#{lat},
            </if>
            <if test="lng != null">
                lng=#{lng},
            </if>
            <if test="createTime != null">
                CREATE_TIME=#{createTime},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hailu.cloud.api.xinan.module.app.entity.Nation">
    update sys_nation
    set CODE = #{code,jdbcType=VARCHAR},
      PARENT_CODE = #{parentCode},
      AREA_NAME = #{areaName},
      lat = #{lat},
      lng = #{lng},
      CREATE_TIME = #{createTime}
    where ID = #{id,jdbcType=BIGINT}
  </update>

    <select id="findByParentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_nation
        <where> 1=1
        <if test="parentCode != null and parentCode != 1">
            and PARENT_CODE = #{parentCode}
        </if>
        <if test="parentCode == 1 or parentCode == null ">
            and PARENT_CODE is null
        </if>
        </where>
    </select>


    <select id="findNationByAreaName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_nation
        where 1=1
        <if test="areaName != null">
            AND AREA_NAME = #{areaName}
        </if>
    </select>



    <select id="findListByCodeArray" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_nation
        where 1=1
        <if test="codeList != null  and codeList.size > 0  ">
            AND CODE IN
            <foreach item="code" index="index" collection="codeList" open="("
                     separator="," close=")">
                ${code}
            </foreach>
        </if>
    </select>

    <select id="findCodeBySonCode" resultType="java.lang.String">
        select PARENT_CODE AS code from sys_nation
        where CODE = #{Code}
    </select>


    <select id="findCityNameByCode" resultType="java.lang.String">
        select AREA_NAME from sys_nation
        where CODE = #{code}
    </select>


    <select id="findListByCode" resultType="com.hailu.cloud.api.xinan.module.app.entity.Nation">
		select id,
			CODE,
			PROVINCE,
			CITY,
			DISTRICT
		from sys_nation where parent_id = (select id from sys_nation where code = #{code})
	</select>

</mapper>