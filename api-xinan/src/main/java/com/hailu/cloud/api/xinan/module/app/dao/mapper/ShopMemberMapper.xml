<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hailu.cloud.api.xinan.module.app.dao.ShopMemberMapper">
    <resultMap id="BaseResultMap" type="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
        <id column="member_id" property="memberId"/>
        <result column="member_name" property="memberName" jdbcType="VARCHAR"/>
        <result column="member_true_name" property="memberTrueName" jdbcType="VARCHAR"/>
        <result column="member_avatar" property="memberAvatar" jdbcType="VARCHAR"/>
        <result column="merchant_type" property="merchantType" jdbcType="BIT"/>
        <result column="superior_member" property="superiorMember" jdbcType="VARCHAR"/>
        <result column="hl_member" property="hlMember" jdbcType="INTEGER"/>
        <result column="total_merchants_money" property="totalMerchantsMoney" jdbcType="DECIMAL"/>
        <result column="member_sex" property="memberSex" jdbcType="VARCHAR"/>
        <result column="member_passwd" property="memberPasswd" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
        <result column="available_predeposit" property="availablePredeposit" jdbcType="DECIMAL"/>
        <result column="freeze_predeposit" property="freezePredeposit" jdbcType="DECIMAL"/>
        <result column="consumption_predeposit" property="consumptionPredeposit" jdbcType="DECIMAL"/>
        <result column="withdraw_predeposit" property="withdrawPredeposit" jdbcType="DECIMAL"/>
        <result column="total_predeposit" property="totalPredeposit" jdbcType="DECIMAL"/>
        <result column="is_del" property="isDel" jdbcType="INTEGER"/>
        <result column="member_mobile" property="memberMobile" jdbcType="VARCHAR"/>
        <result column="invite_code" property="inviteCode" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="be_invite_user" property="beInviteUser" jdbcType="VARCHAR"/>
        <result column="regist_time" property="registTime" jdbcType="BIGINT"/>
        <result column="WX_state" property="wxState" jdbcType="VARCHAR"/>
        <result column="open_id" property="openId" jdbcType="VARCHAR"/>
        <result column="unionid" property="unionid" jdbcType="VARCHAR"/>
        <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.hailu.cloud.api.xinan.module.app.entity.ShopMember"
               extends="BaseResultMap">
        <result column="user_icon" property="userIcon" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    member_id, member_name, member_true_name, member_avatar, merchant_type, superior_member,
    hl_member, total_merchants_money, member_sex, member_passwd, create_time,
    available_predeposit, freeze_predeposit, consumption_predeposit, withdraw_predeposit,
    total_predeposit, is_del, member_mobile, invite_code, user_id,
    be_invite_user, regist_time, WX_state, open_id, unionid, LOGIN_NAME
  </sql>
    <sql id="Blob_Column_List">
        <include refid="Base_Column_List"/>
        , user_icon
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from shop_member
        where member_id = #{memberId}
    </select>

    <select id="selectByPrimaryByuserId" resultType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember"
            parameterType="string">
    select
    *
    from shop_member
    where user_id = #{userId}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_member
    where member_id = #{memberId}
  </delete>
    <insert id="insert" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember" useGeneratedKeys="true"
            keyProperty="memberId">
    insert into shop_member (member_name, member_true_name, member_avatar,
      member_sex, member_passwd, create_time,
      available_predeposit, freeze_predeposit, 
      consumption_predeposit, withdraw_predeposit, 
      total_predeposit, is_del, member_mobile,
      invite_code, user_id,
      be_invite_user, regist_time,
      WX_state, open_id, unionid, LOGIN_NAME
      user_icon)
    values (#{memberName,jdbcType=VARCHAR}, #{memberTrueName,jdbcType=VARCHAR}, #{memberAvatar,jdbcType=VARCHAR},
      #{memberSex,jdbcType=VARCHAR}, #{memberPasswd,jdbcType=VARCHAR},
      #{createTime,jdbcType=BIGINT}, #{availablePredeposit,jdbcType=DECIMAL}, #{freezePredeposit,jdbcType=DECIMAL},
      #{consumptionPredeposit,jdbcType=DECIMAL}, #{withdrawPredeposit,jdbcType=DECIMAL}, 
      #{totalPredeposit,jdbcType=DECIMAL}, #{isDel,jdbcType=INTEGER}, #{memberMobile,jdbcType=VARCHAR},
      #{inviteCode,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{beInviteUser,jdbcType=VARCHAR}, #{registTime,jdbcType=DATE},
      #{wxState,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{userIcon,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember"
            useGeneratedKeys="true" keyProperty="memberId">
        insert into shop_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberName != null">
                member_name,
            </if>
            <if test="memberTrueName != null">
                member_true_name,
            </if>
            <if test="memberAvatar != null">
                member_avatar,
            </if>
            <if test="memberSex != null">
                member_sex,
            </if>
            <if test="memberPasswd != null">
                member_passwd,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="availablePredeposit != null">
                available_predeposit,
            </if>
            <if test="freezePredeposit != null">
                freeze_predeposit,
            </if>
            <if test="consumptionPredeposit != null">
                consumption_predeposit,
            </if>
            <if test="withdrawPredeposit != null">
                withdraw_predeposit,
            </if>
            <if test="totalPredeposit != null">
                total_predeposit,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="memberMobile != null">
                member_mobile,
            </if>
            <if test="inviteCode != null">
                invite_code,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="beInviteUser != null">
                be_invite_user,
            </if>
            <if test="registTime != null">
                regist_time,
            </if>
            <if test="wxState != null">
                WX_state,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="unionid != null">
                unionid,
            </if>
            <if test="loginName != null">
                LOGIN_NAME,
            </if>
            <if test="userIcon != null">
                user_icon,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberName != null">
                #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberTrueName != null">
                #{memberTrueName,jdbcType=VARCHAR},
            </if>
            <if test="memberAvatar != null">
                #{memberAvatar,jdbcType=VARCHAR},
            </if>
            <if test="memberSex != null">
                #{memberSex,jdbcType=VARCHAR},
            </if>
            <if test="memberPasswd != null">
                #{memberPasswd,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="availablePredeposit != null">
                #{availablePredeposit,jdbcType=DECIMAL},
            </if>
            <if test="freezePredeposit != null">
                #{freezePredeposit,jdbcType=DECIMAL},
            </if>
            <if test="consumptionPredeposit != null">
                #{consumptionPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="withdrawPredeposit != null">
                #{withdrawPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="totalPredeposit != null">
                #{totalPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
            <if test="memberMobile != null">
                #{memberMobile,jdbcType=VARCHAR},
            </if>
            <if test="inviteCode != null">
                #{inviteCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="beInviteUser != null">
                #{beInviteUser,jdbcType=VARCHAR},
            </if>
            <if test="registTime != null">
                #{registTime,jdbcType=DATE},
            </if>
            <if test="wxState != null">
                #{wxState,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="unionid != null">
                #{unionid,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="userIcon != null">
                #{userIcon,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
        update shop_member
        <set>
            <if test="memberName != null">
                member_name = #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberTrueName != null">
                member_true_name = #{memberTrueName,jdbcType=VARCHAR},
            </if>
            <if test="memberAvatar != null">
                member_avatar = #{memberAvatar,jdbcType=VARCHAR},
            </if>
            <if test="memberSex != null">
                member_sex = #{memberSex,jdbcType=VARCHAR},
            </if>
            <if test="memberPasswd != null">
                member_passwd = #{memberPasswd,jdbcType=VARCHAR},
            </if>
            <if test="availablePredeposit != null">
                available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
            </if>
            <if test="freezePredeposit != null">
                freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
            </if>
            <if test="consumptionPredeposit != null">
                consumption_predeposit = #{consumptionPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="withdrawPredeposit != null">
                withdraw_predeposit = #{withdrawPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="totalPredeposit != null">
                total_predeposit = #{totalPredeposit,jdbcType=DECIMAL},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
            <if test="memberMobile != null">
                member_mobile = #{memberMobile,jdbcType=VARCHAR},
            </if>
            <if test="inviteCode != null">
                invite_code = #{inviteCode,jdbcType=VARCHAR},
            </if>
            <if test="beInviteUser != null">
                be_invite_user = #{beInviteUser,jdbcType=VARCHAR},
            </if>
            <if test="wxState != null">
                WX_state = #{wxState,jdbcType=VARCHAR},
            </if>
            <if test="openId != null">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="unionid != null">
                unionid = #{unionid,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="userIcon != null">
                user_icon = #{userIcon,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where user_id = #{userId}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
    update shop_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_true_name = #{memberTrueName,jdbcType=VARCHAR},
      member_avatar = #{memberAvatar,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=VARCHAR},
      member_passwd = #{memberPasswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
      consumption_predeposit = #{consumptionPredeposit,jdbcType=DECIMAL},
      withdraw_predeposit = #{withdrawPredeposit,jdbcType=DECIMAL},
      total_predeposit = #{totalPredeposit,jdbcType=DECIMAL},
      is_del = #{isDel,jdbcType=INTEGER},
      member_mobile = #{memberMobile,jdbcType=VARCHAR},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      be_invite_user = #{beInviteUser,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=DATE},
      WX_state = #{wxState,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=LONGVARCHAR}
    where member_id = #{memberId}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
    update shop_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_true_name = #{memberTrueName,jdbcType=VARCHAR},
      member_avatar = #{memberAvatar,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=VARCHAR},
      member_passwd = #{memberPasswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      available_predeposit = #{availablePredeposit,jdbcType=DECIMAL},
      freeze_predeposit = #{freezePredeposit,jdbcType=DECIMAL},
      consumption_predeposit = #{consumptionPredeposit,jdbcType=DECIMAL},
      withdraw_predeposit = #{withdrawPredeposit,jdbcType=DECIMAL},
      total_predeposit = #{totalPredeposit,jdbcType=DECIMAL},
      is_del = #{isDel,jdbcType=INTEGER},
      member_mobile = #{memberMobile,jdbcType=VARCHAR},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      be_invite_user = #{beInviteUser,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=DATE},
      WX_state = #{wxState,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
    where member_id = #{memberId}
  </update>


    <select id="selectLitemallLogin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shop_member
        where 1=1
        <if test="username != null and username != ''">
            and LOGIN_NAME = #{username}
        </if>
    </select>
    <insert id="AddLitemallUser" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
    INSERT INTO `shop_member` (
        `member_id`,
        `LOGIN_NAME`,
        `member_name`,
        `member_mobile`,
        `regist_time`,
        `user_id`
      )
      VALUES
        (
          #{memberId},
          #{loginName},
          #{memberName},
          #{memberMobile},
          #{registTime},
          #{userId}
        ) ;
  </insert>


    <insert id="AddShopMember" parameterType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
    INSERT INTO `shop_member` (
        `member_id`,
        `LOGIN_NAME`,
        `member_name`,
        `member_mobile`,
        `regist_time`,
        `user_id`,
        member_passwd,
        open_id,
        unionid,
        member_sex,
        WX_state
      )
      VALUES
        (
          #{memberId},
          #{loginName},
          #{memberName},
          #{memberMobile},
          #{registTime},
          #{userId},
          #{memberPasswd},
          #{openId},
          #{unionid},
          #{memberSex},
          #{wxState}
        ) ;
  </insert>


    <select id="selectLitemallByPhone" resultType="int">
    select count(member_mobile) from shop_member
    where member_mobile = #{phone}
  </select>


    <select id="findObjectByPhone" resultType="com.hailu.cloud.api.xinan.module.app.entity.ShopMember">
    select * from shop_member
    where member_mobile = #{phone}
  </select>


    <select id="findShopMemberByUserIdAndMerchantType" resultType="int" parameterType="java.lang.String">
    select count(member_id) from shop_member
    where user_id = #{userId} And merchant_type = 1 or merchant_type = 2 and user_id = #{userId}
  </select>
</mapper>