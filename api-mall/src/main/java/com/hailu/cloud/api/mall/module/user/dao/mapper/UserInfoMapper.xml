<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hailu.cloud.api.mall.module.user.dao.UserInfoMapper">

    <sql id="userInfoVoData">
        user_Id AS userId,
        user_icon AS userIcon,
        member_truename AS userName,
        member_name AS nickName,
        member_mobile AS userMobile,
        invite_code AS inviteCode,
        be_invite_user AS beInviteUser,
        regist_time AS createTime,
        is_del,
        member_sex sex,
        unionid,
        open_id,
        WX_state,
        available_predeposit as balance,
        merchant_type AS merchantType,
        superior_member AS superiorMember
    </sql>

    <sql id="userInfoId">

	member_id             		AS 	   	id                        ,
	USER_ID        		AS 	   	userId                    ,
	LOGIN_NAME     		AS 	   	loginName                 ,
	member_passwd   		AS 	   	loginPasswd               ,
	USER_ICON      		AS 	   	userIcon                  ,
	member_truename      		AS 	   	userName                  ,
	member_name      		AS 	   	nickName                  ,
	member_mobile    		AS 	   	userMobile                ,
	regist_time    		AS 	   	createTime                ,
	invite_code    		AS 	   	inviteCode                ,
	be_invite_user 		AS 	   	beInviteUserA,
	merchant_type      AS merchantType,
	superior_member AS superiorMember,
	hl_member AS hlMember,
	hl_member_timeout AS hlMemberTimeout
    </sql>

    <!--通过主键查询 返回结果 只有0或者1条 -->
    <select id="userInfoQueryByUserId" parameterType="String"
            resultType="com.hailu.cloud.api.mall.module.user.vo.UserInfoVo">
        SELECT
        <include refid="userInfoVoData"/>,available_commission as availableCommission
        FROM
        shop_member sm
        LEFT JOIN shop_member_info smi ON sm.user_id = smi.member_id
        where sm.user_id=#{userId}
    </select>

    <update id="updateUserInfo">
        UPDATE shop_member u
        <set>
            <trim suffixOverrides=",">
                <if test="userIcon !=null">
                    u.user_icon = #{userIcon},
                </if>
                <if test="nickName !=null">
                    u.member_name = #{nickName},
                </if>
                <if test="sex !=null">
                    u.member_sex = #{sex},
                </if>
            </trim>
        </set>
        WHERE u.user_Id = #{userId}
    </update>

    <insert id="saveWeChatUser" parameterType="com.hailu.cloud.api.mall.module.user.entity.UserInfo">
        INSERT INTO shop_member(
          user_Id,
          login_name,
          member_passwd,
          user_icon,
          member_name,
          member_truename,
          member_mobile,
          regist_time,
          invite_code,
          is_del
        )
        VALUES
          (
            #{userId},
            #{loginName},
            #{loginPasswd},
            #{userIcon},
            #{nickName},
            #{userName},
            #{userMobile},
            #{createTime},
            #{inviteCode},
            0
          )
    </insert>

    <select id="byIdFindUser" parameterType="String"
            resultType="com.hailu.cloud.api.mall.module.user.entity.UserInfo">
        SELECT
        <include refid="userInfoId"/>
        FROM shop_member
        WHERE user_Id=#{userId}
    </select>

    <!--添加用户使用记录-->
    <insert id="saveUseRecord" parameterType="java.util.Map">
        INSERT INTO shop_member_record(member_id,create_time)
        VALUE(#{sessionID},NOW())
    </insert>
    <select id="findUseRecord" resultType="int">
        SELECT COUNT(1) FROM shop_member_record where TO_DAYS(create_time)=TO_DAYS(NOW()) and member_id=#{sessionID}
    </select>

    <update id="updateMerchantMoney">
        update shop_member set
        hl_member = #{hlMember}
        WHERE user_id=#{userId}
    </update>

    <update id="editHlMember">
        update shop_member set hl_member = #{status} , hl_member_card = #{memberCard},hl_member_timeout = #{timeOut}
        WHERE user_id=#{userId}
    </update>

    <update id="editMerchantTypeAndSuperiorMember">
        update shop_member set merchant_type = #{merchantType},superior_member = #{superiorMember},merchant_city_id = #{cityId}
        where user_id=#{userId}
    </update>


    <select id="countPoviderNum" resultType="int">
        select count(member_id)
        from shop_member where merchant_city_id = #{cityId} and merchant_type = 2
    </select>
</mapper>